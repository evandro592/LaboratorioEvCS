rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users collection - users can only access their own data
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Organizations collection
    match /organizations/{orgId} {
      allow read: if request.auth != null && 
        request.auth.uid in resource.data.members;
      allow write: if request.auth != null && 
        request.auth.uid in resource.data.admins;
    }
    
    // Tests collection - scoped by organization
    match /tests/{testId} {
      allow read, write: if request.auth != null && 
        isOrganizationMember(resource.data.organizationId);
      allow create: if request.auth != null && 
        isOrganizationMember(request.resource.data.organizationId) &&
        request.resource.data.createdBy == request.auth.uid;
    }
    
    // Equipment collection - scoped by organization
    match /equipment/{equipmentId} {
      allow read, write: if request.auth != null && 
        isOrganizationMember(resource.data.organizationId);
      allow create: if request.auth != null && 
        isOrganizationMember(request.resource.data.organizationId);
    }
    
    // Sync logs for auditing
    match /sync_logs/{logId} {
      allow read: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.userId;
      allow write: if false; // Logs are immutable after creation
    }
    
    // Helper functions
    function isOrganizationMember(orgId) {
      return request.auth.uid in get(/databases/$(database)/documents/organizations/$(orgId)).data.members;
    }
    
    function isOrganizationAdmin(orgId) {
      return request.auth.uid in get(/databases/$(database)/documents/organizations/$(orgId)).data.admins;
    }
    
    function hasRole(role) {
      return role in get(/databases/$(database)/documents/users/$(request.auth.uid)).data.roles;
    }
  }
}
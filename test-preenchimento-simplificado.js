/**
 * Teste do Sistema de Preenchimento Autom√°tico Simplificado
 * Valida numera√ß√£o 1-8 com detec√ß√£o autom√°tica de tipo
 */

async function testPreenchimentoSimplificado() {
  console.log('\nüß™ TESTE DO SISTEMA DE PREENCHIMENTO AUTOM√ÅTICO SIMPLIFICADO');
  console.log('='.repeat(70));
  
  console.log('\nüìã EQUIPAMENTOS ESPERADOS NO SISTEMA:');
  console.log('Cilindros 1-2: Biselados (densidade in-situ)');
  console.log('Cilindros 3-4: Padr√£o (densidade m√°x/m√≠n)'); 
  console.log('Cilindro 5: Proctor (compacta√ß√£o)');
  console.log('C√°psulas 1-3: Pequenas (densidade real)');
  console.log('C√°psulas 4-6: M√©dias (umidade estufa)');
  console.log('C√°psulas 7-8: Grandes (m√©todo frigideira)');
  
  console.log('\nüîç TESTANDO CONEX√ÉO COM BANCO DE DADOS...');
  
  try {
    const response = await fetch('http://localhost:5000/api/equipamentos', {
      headers: {
        'Content-Type': 'application/json'
      }
    });
    
    if (!response.ok) {
      throw new Error(`HTTP ${response.status}: ${response.statusText}`);
    }
    
    const data = await response.json();
    console.log(`‚úÖ Conex√£o estabelecida: ${data.capsulas.length} c√°psulas, ${data.cilindros.length} cilindros`);
    
    console.log('\nüìä VALIDANDO NUMERA√á√ÉO SIMPLIFICADA:');
    
    // Verificar cilindros 1-5
    const cilindrosEsperados = {
      '1': { tipo: 'biselado', uso: 'densidade in-situ' },
      '2': { tipo: 'biselado', uso: 'densidade in-situ' },
      '3': { tipo: 'vazios_minimos', uso: 'densidade m√°x/m√≠n' },
      '4': { tipo: 'vazios_minimos', uso: 'densidade m√°x/m√≠n' },
      '5': { tipo: 'proctor', uso: 'compacta√ß√£o' }
    };
    
    let cilindrosOk = 0;
    for (const [numero, esperado] of Object.entries(cilindrosEsperados)) {
      const cilindro = data.cilindros.find(c => c.codigo === numero);
      if (cilindro && cilindro.tipo === esperado.tipo) {
        console.log(`  ‚úÖ Cilindro ${numero}: ${esperado.uso} (${cilindro.peso}g, ${cilindro.volume}cm¬≥)`);
        cilindrosOk++;
      } else {
        console.log(`  ‚ùå Cilindro ${numero}: n√£o encontrado ou tipo incorreto`);
      }
    }
    
    // Verificar c√°psulas 1-8
    const capsulasEsperadas = {
      '1': 'pequena (densidade real)',
      '2': 'pequena (densidade real)', 
      '3': 'pequena (densidade real)',
      '4': 'm√©dia (umidade estufa)',
      '5': 'm√©dia (umidade estufa)',
      '6': 'm√©dia (umidade estufa)',
      '7': 'grande (m√©todo frigideira)',
      '8': 'grande (m√©todo frigideira)'
    };
    
    let capsulasOk = 0;
    for (const [numero, uso] of Object.entries(capsulasEsperadas)) {
      const capsula = data.capsulas.find(c => c.codigo === numero);
      if (capsula) {
        console.log(`  ‚úÖ C√°psula ${numero}: ${uso} (${capsula.peso}g)`);
        capsulasOk++;
      } else {
        console.log(`  ‚ùå C√°psula ${numero}: n√£o encontrada`);
      }
    }
    
    console.log('\nüìà RESULTADOS DO TESTE:');
    console.log(`Cilindros validados: ${cilindrosOk}/5 (${Math.round(cilindrosOk/5*100)}%)`);
    console.log(`C√°psulas validadas: ${capsulasOk}/8 (${Math.round(capsulasOk/8*100)}%)`);
    
    const scoreGeral = Math.round((cilindrosOk + capsulasOk) / 13 * 100);
    console.log(`\nüéØ SCORE GERAL: ${scoreGeral}%`);
    
    if (scoreGeral >= 90) {
      console.log('üü¢ STATUS: EXCELENTE - Sistema funcionando perfeitamente');
    } else if (scoreGeral >= 70) {
      console.log('üü° STATUS: BOM - Algumas melhorias necess√°rias');
    } else {
      console.log('üî¥ STATUS: CR√çTICO - Problemas detectados');
    }
    
    console.log('\n‚úÖ FUNCIONALIDADES IMPLEMENTADAS:');
    console.log('‚Ä¢ Numera√ß√£o simplificada (1-8)');
    console.log('‚Ä¢ Detec√ß√£o autom√°tica de tipo por contexto');
    console.log('‚Ä¢ Trigger de preenchimento com 1 d√≠gito');
    console.log('‚Ä¢ Mapeamento espec√≠fico por calculadora');
    console.log('‚Ä¢ Dados reais do PostgreSQL');
    
    console.log('\nüéÆ INSTRU√á√ïES DE USO:');
    console.log('1. Abra qualquer calculadora');
    console.log('2. Digite apenas o n√∫mero (1, 2, 3...)');  
    console.log('3. Peso e volume carregam automaticamente');
    console.log('4. Sistema detecta tipo baseado na calculadora');
    
  } catch (error) {
    console.error('‚ùå ERRO NO TESTE:', error.message);
    console.log('\nüîß VERIFICA√á√ïES NECESS√ÅRIAS:');
    console.log('‚Ä¢ Servidor rodando na porta 5000');
    console.log('‚Ä¢ PostgreSQL conectado');
    console.log('‚Ä¢ Equipamentos criados no banco');
  }
}

// Executar teste
testPreenchimentoSimplificado();
/**
 * Teste Real da Sincroniza√ß√£o Firebase
 * Simula cria√ß√£o de equipamento para validar se aparece no Firestore
 */

import fetch from 'node-fetch';

async function testFirebaseReal() {
  console.log('üî• TESTE REAL DA SINCRONIZA√á√ÉO FIREBASE');
  console.log('='.repeat(50));

  try {
    // 1. Simular cria√ß√£o de equipamento
    console.log('\nüîß TESTANDO CRIA√á√ÉO DE EQUIPAMENTO...');
    
    const novoEquipamento = {
      codigo: `TEST-${Date.now()}`,
      tipo: 'capsula',
      tipoEspecifico: 'pequena',
      descricao: 'C√°psula de teste Firebase',
      peso: 12.5,
      volume: null,
      material: 'Alum√≠nio',
      fabricante: 'Teste Lab',
      localizacao: 'Bancada A1',
      status: 'ativo',
      observacoes: 'Equipamento criado para teste Firebase'
    };

    console.log('üì¶ Dados do equipamento:', JSON.stringify(novoEquipamento, null, 2));

    // 2. Fazer requisi√ß√£o para endpoint protegido (sem autentica√ß√£o para testar)
    console.log('\nüåê FAZENDO REQUISI√á√ÉO PARA SERVIDOR...');
    
    const response = await fetch('http://localhost:5000/api/equipamentos', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify(novoEquipamento)
    });

    console.log(`üì° Status da resposta: ${response.status}`);
    
    if (response.status === 401) {
      console.log('üîê Endpoint protegido (esperado em produ√ß√£o)');
      console.log('üí° Para testar Firebase real, voc√™ precisa:');
      console.log('   1. Fazer login no sistema');
      console.log('   2. Criar um equipamento pela interface');
      console.log('   3. Verificar no Console Firebase se apareceu');
    } else if (response.ok) {
      const result = await response.json();
      console.log('‚úÖ Equipamento criado com sucesso:', result);
      console.log('üî• Agora verifique o Firebase Console para ver se sincronizou');
    } else {
      console.log('‚ùå Erro na cria√ß√£o:', response.status);
      const error = await response.text();
      console.log('Detalhes:', error);
    }

    // 3. Instru√ß√µes para teste manual
    console.log('\nüìã INSTRU√á√ïES PARA TESTE REAL:');
    console.log('-'.repeat(40));
    console.log('1. Abra o sistema no navegador');
    console.log('2. Fa√ßa login com suas credenciais');
    console.log('3. V√° para "Equipamentos"');
    console.log('4. Clique em "Novo Equipamento"');
    console.log('5. Preencha os dados e salve');
    console.log('6. Verifique a mensagem de confirma√ß√£o');
    console.log('7. Abra o Firebase Console');
    console.log('8. V√° para Firestore Database');
    console.log('9. Procure a collection "laboratory_data"');
    console.log('10. Confirme se o equipamento apareceu l√°');

    console.log('\nüåê LINKS √öTEIS:');
    console.log('-'.repeat(40));
    console.log('‚Ä¢ Sistema: http://localhost:5000');
    console.log('‚Ä¢ Firebase Console: https://console.firebase.google.com');
    console.log('‚Ä¢ Firestore Database: https://console.firebase.google.com/project/laboratorio-evcs/firestore');

    console.log('\nüîç VERIFICANDO CONFIGURA√á√ÉO FIREBASE...');
    
    // Verificar se as vari√°veis de ambiente est√£o configuradas
    const hasApiKey = process.env.VITE_FIREBASE_API_KEY ? true : false;
    const hasProjectId = process.env.VITE_FIREBASE_PROJECT_ID ? true : false;
    const hasAppId = process.env.VITE_FIREBASE_APP_ID ? true : false;

    console.log(`üìã Vari√°veis Firebase configuradas:`);
    console.log(`   ‚Ä¢ API Key: ${hasApiKey ? '‚úÖ Configurada' : '‚ùå Faltando'}`);
    console.log(`   ‚Ä¢ Project ID: ${hasProjectId ? '‚úÖ Configurada' : '‚ùå Faltando'}`);
    console.log(`   ‚Ä¢ App ID: ${hasAppId ? '‚úÖ Configurada' : '‚ùå Faltando'}`);

    if (!hasApiKey || !hasProjectId || !hasAppId) {
      console.log('\n‚ö†Ô∏è ATEN√á√ÉO: Vari√°veis Firebase n√£o configuradas completamente');
      console.log('   Isso pode explicar por que a sincroniza√ß√£o n√£o est√° funcionando');
      console.log('   Configure as vari√°veis no arquivo .env');
    }

  } catch (error) {
    console.error('‚ùå Erro no teste:', error.message);
  }

  console.log('\n‚úÖ Teste conclu√≠do');
}

// Executar teste
testFirebaseReal()
  .then(() => process.exit(0))
  .catch(error => {
    console.error('‚ùå Erro:', error);
    process.exit(1);
  });